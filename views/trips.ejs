<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://getbootstrap.com/docs/5.3/assets/css/docs.css" rel="stylesheet">
    <title>Bootstrap Example</title>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
    <div classname="container">
        <div class="accordion accordion-flush" id="trips">

        </div>
        <div class="accordion" id="accordionExample">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse"
                        data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        Accordion Item #1
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the
                        collapse plugin adds the appropriate classes that we use to style each element. These classes
                        control the overall appearance, as well as the showing and hiding via CSS transitions. You can
                        modify any of this with custom CSS or overriding our default variables. It's also worth noting
                        that just about any HTML can go within the <code>.accordion-body</code>, though the transition
                        does limit overflow.
                    </div>
                </div>
            </div>

        </div>
    </div>

    <script>
        var trips = []
        var t = $('#trips');
        axios.get('/gettrips').then((res) => {
            console.log(res.data)
            trips = res.data.trips.sort((a, b) => parseInt(a.travletime) - parseInt(b.travletime))
            trips.forEach(element => {
                t.append(createtrip(element))
            });
        })

        var createtrip = (data) => {
            var item = $('<div class="accordion-item">');
            var head = $('<h2 class="accordion-header">');
            var button = $('<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"  aria-expanded="false" >')
            button.attr('data-bs-target', '#'+data.invoice);
            button.attr('aria-controls', data.invoice);
            button.text(data.nickname+' '+data.triptype+" "+data.date+" "+data.pickuptime);
            var coll_div = $('<div class="accordion-collapse collapse">')
            coll_div.attr('id', data.invoice);
            coll_div.attr('data-bs-parent', 'trips')
            item.append(head);
            item.append(coll_div);
            head.append(button);
            var info = $('<div class="accordion-body">').text(data);
            coll_div.append(info)
            return (item);
        }
    </script>
</body>

</html>